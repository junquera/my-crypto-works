'''
La mejor explicación del método de análisis Kasiski:
    https://crypto.interactive-maths.com/kasiski-analysis-breaking-the-code.html
'''
import mono
m1 = 'VSFCRJUZHROTAABUEXCCRRMOARLUNNISUDBUEYCFUEEQVWRMFHECDWCKOSFNDADSNCILOQFCABALEEHEFPDCTIAYOCFLUOYWANSGZCAQBELMVRIRMAVVNFOQVNGSFKRACEUEZOQFRKFRJOXJRILASATLMGRVNGBGZEYDBGRGRRECUOYVLBFVDEDCDLEXCFRQGSYVPABQIEYCFLNPWRQCXOEF'
m2 = 'LNUDVMUYRMUDVLLPXAFZUEFAIOVWVMUOVMUEVMUEZCUDVSYWCIVCFGUCUNYCGALLGRCYTIJTRNNPJQOPJEMZITYLIAYYKRYEFDUDCAMAVRMZEAMBLEXPJCCQIEHPJTYXVNMLAEZTIMUOFRUFC'

m3 = 'QRBAIUWYOKILBRZXTUWLEGXSNVDXWRXMHXYFCGMWWWSMELSXUZMKMFSBNZIFYEIEGRFZRXWKUFAXQEDXDTTHYNTBRJLHTAIKOCZXQHBNDZIGZGPXARJEDYSJNUMKIFLBTNHWISWNVLFMEGXAIAAWSLFMHXRSGRIGHEQTUMLGLVBRSILAEZSGXCMHTOWHFMLWMRKHPRFBELWGFRUGPBHNBEMKBNVWHHUEAKILBNBMLHKXUGMLYQKHPRFBELEJYNVWSIJBGAXGOTPMXRTXFKIWUALBRGWIEGHWHGAMEWWLTAELNUMREUWTBLSDPRLYVRETLEEDFROBEQUXTHXZYOZBXLKACKSOHNVWXKSMAEPHIYQMMFSECHRFYPBBSQTXTPIWHGPXQDFWTAIKNNBXSIYKETXTLVBTMQALAGHGOTPMXRTXTHXSFYGWMVKHLOIVUALMLDLTSYVWYNVWMQVXPXRVYABLXDLXSMLWSUIOIIMELISOYEBHPHNRWTVUIAKEYGWIETGWWBVMVDUMAEPAUAKXWHKMAUPAMUKHQPWKCXEFXGWWSDDEOMLWLNKMWDFWTAMFAFEAMFZBNWIHYALXRWKMAMIKGNGHJUAZHMHGUALYSULAELYHJBZMSILAILHWWYIKEWAHNPMLBNNBVPJXLBEFWRWGXKWIRHXWWGQHRRXWIOMFYCZHZLVXNVIOYZCMYDDEYIPWXTMMSHSVHHXZYEWNVOAOELSMLSWKXXFXSTRVIHZLEFJXDASFIE'

# https://crypto.interactive-maths.com/kasiski-analysis-breaking-the-code.html
m4 = 'CVJTNAFENMCDMKBXFSTKLHGSOJWHOFUISFYFBEXEINFIMAYSSDYYIJNPWTOKFRHWVWTZFXHLUYUMSGVDURBWBIVXFAFMYFYXPIGBHWIFHHOJBEXAUNFIYLJWDKNHGAOVBHHGVINAULZFOFUQCVFBYNFTYGMMSVGXCFZFOKQATUIFUFERQTEWZFOKMWOJYLNZBKSHOEBPNAYTFKNXLBVUAXCXUYYKYTFRHRCFUYCLUKTVGUFQBESWYSSWLBYFEFZVUWTRLLNGIZGBMSZKBTNTSLNNMDPMYMIUBVMTLOBJHHFWTJNAUFIZMBZLIVHMBSUWLBYFEUYFUFENBRVJVKOLLGTVUZUAOJNVUWTRLMBATZMFSSOJQXLFPKNAULJCIOYVDRYLUJMVMLVMUKBTNAMFPXXJPDYFIJFYUWSGVIUMBWSTUXMSSNYKYDJMCGASOUXBYSMCMEUNFJNAUFUYUMWSFJUKQWSVXXUVUFFBPWBCFYLWFDYGUKDRYLUJMFPXXEFZQXYHGFLACEBJBXQSTWIKNMORNXCJFAIBWWBKCMUKIVQTMNBCCTHLJYIGIMSYCFVMURMAYOBJUFVAUZINMATCYPBANKBXLWJJNXUJTWIKBATCIOYBPPZHLZJJZHLLVEYAIFPLLYIJIZMOUDPLLTHVEVUMBXPIBBMSNSCMCGONBHCKIVLXMGCRMXNZBKQHODESYTVGOUGTHAGRHRMHFREYIJIZGAUNFZIYZWOUYWQZPZMAYJFJIKOVFKBTNOPLFWHGUSYTLGNRHBZSOPMIYSLWIKBANYUOYAPWZXHVFUQAIATYYKYKPMCEYLIRNPCDMEIMFGWVBBMUPLHMLQJWUGSKQVUDZGSYCFBSWVCHZXFEXXXAQROLYXPIUKYHMPNAYFOFHXBSWVCHZXFEXXXAIRPXXGOVHHGGSVNHWSFJUKNZBESHOKIRFEXGUFVKOLVJNAYIVVMMCGOFZACKEVUMBATVHKIDMVXBHLIVWTJAUFFACKHCIKSFPKYQNWOLUMYVXYYKYAOYYPUKXFLMBQOFLACKPWZXHUFJYGZGSTYWZGSNBBWZIVMNZXFIYWXWBKBAYJFTIFYKIZMUIVZDINLFFUVRGSSBUGNGOPQAILIFOZBZFYUWHGIRHWCFIZMWYSUYMAUDMIYVYAWVNAYTFEYYCLPWBBMVZZHZUHMRWXCFUYYVIENFHPYSMKBTMOIZWAIXZFOLBSMCHHNOJKBMBATZXXJSSKNAULBJCLFWXDSUYKUCIOYJGFLMBWHFIWIXSFGXCZBMYMBWTRGXXSHXYKZGSDSLYDGNBXHAUJBTFDQCYTMWNPWHOFUISMIFFVXFSVFRNA'
m5 = 'DAZFISFSPAVQLSNPXYSZWXALCDAFGQUISMTPHZGAMKTTFTCCFXKFCRGGLPFETZMMMZOZDEADWVZWMWKVGQSOHQSVHPWFKLSLEASEPWHMJEGKPURVSXJXVBWVPOSDETEQTXOBZIKWCXLWNUOVJMJCLLOEOFAZENVMJILOWZEKAZEJAQDILSWWESGUGKTZGQZVRMNWTQSEOTKTKPBSTAMQVERMJEGLJQRTLGFJYGSPTZPGTACMOECBXSESCIYGUFPKVILLTWDKSZODFWFWEAAPQTFSTQIRGMPMELRYELHQSVWBAWMOSDELHMUZGPGYEKZUKWTAMZJMLSEVJQTGLAWVOVVXHKWQILIEUYSZWXAHHUSZOGMUZQCIMVZUVWIFJJHPWVXFSETZEDF'

m = m1
# Análisis para determinar tamaño de clave
distancias = []
for i in [2, 3]:
    repes = mono.analiza_repetidos(m, i)

    for r in repes:
        distancias += mono.distancia_repeticiones(repes[r])

distancias = list(set(distancias))
distancias.sort()

results = []
for key_len in distancias[:20]:
    try:
        sub_messages = []
        # print("[*] KEY LENGTH: %d" % key_len)
        for i in range(key_len):
            sub_messages.append(m[i::key_len])


        key = ""
        for message in sub_messages:
            stat = mono.analisis_estadistico(message)
            # if key_len == 4:
            #     for i in stat:
            #         print("%s,%s,%s" % (i, stat[i], mono.estadisticas_castellano[i]))


            traduccion = mono.calc_desplaz(stat, tries=10)
            c = chr(traduccion + ord('A'))
            # c = mono.vigenere_enc(message[0], traduccion[message[0]])
            key += c

        # print("[*] KEY: %s" % key)
        results.append(mono.Descifrado(mono.vigenere_dec(m, key), key))

    except:
        pass

print(mono.most_able(results)[0][0])
